<!DOCTYPE html>

<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>bootstrap.js : /home/vargoose84/mystatic/js/bootstrap.js : Editor : vargoose84 : PythonAnywhere</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="description" content="bootstrap.js : /home/vargoose84/mystatic/js/bootstrap.js : Editor : vargoose84 : PythonAnywhere">
        <meta name="author" content="PythonAnywhere LLP">
        <meta name="google-site-verification" content="O4UxDrfcHjC44jybs2vajc1GgRkTKCTRgVzeV6I9V14" />


        <!-- Le styles -->
        <link rel="stylesheet" href="/static/CACHE/css/4cafd7b61e89.css" type="text/css" media="screen" />
        <link rel="stylesheet" href="/static/CACHE/css/f2e4190bb326.css" type="text/css" media="screen" />

        <!-- Le javascript -->
        <script type="text/javascript">
            var urls = {};
            var Anywhere = {};
            Anywhere.urls = {};
            Anywhere.csrfToken = "d75d952bc78c540e6d5b5273e68fc94c";
        </script>
        <script type="text/javascript" src="/static/CACHE/js/a1cfb7dec2b5.js"></script>
        
            <script type="text/javascript">
                $(function() {
                    $.extend(
                        urls,
                        {
                            task_helper_back: '/user/vargoose84/task_helper/back',
                            task_helper_next: '/user/vargoose84/task_helper/next',
                            task_helper_close: '/user/vargoose84/task_helper/close',
                        }
                    );
                    $.extend(Anywhere.urls, urls);
                    Anywhere.TaskHelper.CURRENT_TASK_STEPS = JSON.parse('["\\n<p><strong>Welcome to PythonAnywhere!</strong></p>\\n<p>Up here you will see instructions walking you through the process of creating a\\nPython web application. You can go forward and back through the steps using the\\narrow buttons below, and you can finish at any time by clicking the cross in\\nthe top right.  If after closing this helper, you want to go through it again\\n--- or try another one -- go to the <strong>Help</strong> page, by following\\nthe link above and to the right.</p>\\n<p>Click the right arrow to get started.</p>\\n", "\\n<p>The process of deploying an app on PythonAnywhere involves three main steps:</p>\\n<ol>\\n<li>Uploading your code to PythonAnywhere</li>\\n<li>Setting up a <em>virtualenv</em>, if you need one</li>\\n<li>Configuring your application using WSGI</li>\\n</ol>\\n<p>NB - only WSGI apps are supported, so that includes anything built with\\nDjango, Flask, Bottle, etc, but custom servers using, eg, Tornado, probably\\nwon\'t work.</p>\\n", "\\n<p>Another note:  If you\'re using <strong>Web2py</strong>, you can skip the rest of this\\nguide.  Instead, go to the <strong>Web</strong> tab, click <strong>Add new web app</strong>, choose\\nweb2py, and then upload your app using the web2py admin UI</p>\\n", "\\n<p><strong>Uploading your code</strong></p>\\n<p>There are several different ways of getting your code onto PythonAnywhere.\\nIf your code is already stored on a cloud VCS system like Bitbucket, Gitlab\\nor Github, then all you need to do is open a <strong>Bash console</strong> and do a\\n<code>git clone</code>.</p>\\n<p>Have a look at the\\n<a href=\\"https://www.pythonanywhere.com/wiki/FTP\\">help page for getting code in and out of PythonAnywhere</a>\\nfor more info.</p>\\n<p>Once you\'ve uploaded your code, you can resume this guide.</p>\\n", "\\n<p><strong>Creating a virtualenv</strong></p>\\n<p>PythonAnywhere has many useful modules pre-installed, but they may not be the\\nsame version as the ones you need for your web app.  Check the\\n<a href=\\"https://www.pythonanywhere.com/batteries_included/\\">batteries included</a> page\\nfor details of exactly what we have installed for each Python version.</p>\\n<p>If the modules you need are already there, then great!  You can skip this step.</p>\\n<p>If not, you\'ll need to set up a virtualenv. Check out these\\n<a href=\\"https://www.pythonanywhere.com/wiki/VirtualEnvForNewerDjango\\">instructions for setting a virtualenv for Django</a>,\\nand modify the steps as appropriate for your own dependencies.</p>\\n", "\\n<p><strong>Setting up your web app using manual WSGI configuration</strong></p>\\n<p>To get your app working, we\'ll need to configure a WSGI file that imports your\\napp, as a Python variable.  That means you need to know two things:</p>\\n<ol>\\n<li>\\n<p>The path to the Python file containing your web app\'s\\n  WSGI file.</p>\\n</li>\\n<li>\\n<p>The name of the application.</p>\\n</li>\\n</ol>\\n<p>For Django, the WSGI app is usually stored at <em>projectname/projectname/wsgi.py</em>, and the variable name is <code>application</code></p>\\n<p>For Flask, the WSGI app is usually invoked as <code>app = Flask(__name__)</code> somewhere.  Locate this file and variable</p>\\n<p>For Bottle, the app is usually invoked something like <code>application = default_app()</code></p>\\n<p>If you\'re using a <strong>virtualenv</strong>, you\'ll also need to know the path to it.\\nThese often live at <em>/home/myusername/.virtualenvs/virtualenvname</em></p>\\n", "\\n<p>Armed with the name and location of your WSGI app, you should now go to the <strong>Web</strong> tab,\\nclick <strong>Add new web app</strong>, and then choose <strong>Manual configuration</strong></p>\\n<p>This will generate a WSGI file for you.  Click through to it (there\'s a link in\\nthe \\"Code\\" section), and take a look at the\\ncomments, which provide some examples for how to get your app imported.  The main\\nsteps are:</p>\\n<ol>\\n<li>Adding the path that your app lives in to <code>sys.path</code></li>\\n<li>Importing the WSGI app and calling it <code>application</code>.</li>\\n</ol>\\n<p>For example, if your app lives at <em>/home/myusername/myproject/myapp.py</em>, and\\nin there, the WSGI app is a variable called <code>app</code>, you\'ll want:</p>\\n<pre><code>sys.path.append(\'/home/mysusername/myproject\')\\nfrom myapp import app as application\\n</code></pre>\\n<p>Finally, if you\'re using a virtualenv, you need two lines at the very top\\nof your WSGI file to get it activated:</p>\\n<pre><code>activate_this = \'/home/myusername/.virtualenvs/virtualenvname/bin/activate_this.py\'\\nexecfile(activate_this, dict(__file__=activate_this))\\n</code></pre>\\n<p>We hope that helps!  Do use the <strong>Send feedback</strong> button above if you run into\\nany problems, we\'re always here to help.</p>"]')
                    Anywhere.TaskHelper.current_step = 6;
                    Anywhere.TaskHelper.initialize(urls);
                });
            </script>
        

        <script type="text/javascript" src="/static/CACHE/js/a614bec3b8ec.js"></script>
        
    <script type="text/javascript">
        $(function() {
            $.extend(urls, {
                save: '/user/vargoose84/files/home/vargoose84/mystatic/js/bootstrap.js',
                check_hash: '/user/vargoose84/files/home/vargoose84/mystatic/js/bootstrap.js',
                run: '/user/vargoose84/files/home/vargoose84/mystatic/js/bootstrap.js' + '?run',
                update_editor_mode_preference: '/user/vargoose84/account/update_editor_mode_preference',

            });
            $.extend(Anywhere.urls, urls);
            var filename = "/home/vargoose84/mystatic/js/bootstrap.js";
            var hash = "6acc95f5a6111a464f06f3074e2dffeb";
            Anywhere.Editor.InitialiseAce(ace, urls, filename, hash);
            Anywhere.Editor.resetEditorState({pyflakes_warnings: [] });
            $("#id_keybinding_mode_select").val("normal");
            $("#id_keybinding_mode_select").trigger("change");

            Anywhere.WebAppControl.initialize();
        });
    </script>

        

        <!-- Le fav and touch icons -->
        <link rel="apple-touch-icon" href="images/apple-touch-icon.png">
        <link rel="apple-touch-icon" sizes="72x72" href="images/apple-touch-icon-72x72.png">
        <link rel="apple-touch-icon" sizes="114x114" href="images/apple-touch-icon-114x114.png">



    </head>

     <body>
        
    <div class="navbar">
        <div class="navbar-inner">
            <div id="id_internal_nav_bar_container" class="container">
                <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                </a>
                <a class="brand" href="/"><img id="id_logo" src="/static/anywhere/images/logo-234x35.png" height="35" title="PythonAnywhere logo" alt="PythonAnywhere logo" /></a>
                <div class="nav-collapse">
                    <ul id="id_header_links" class="nav">
                        <li><a id="id_feedback_link" class='feedback_link' href="">Send feedback</a></li>
                        <li><a id="id_forums_link" href="/forums/">Forums</a></li>
                        <li><a href="/wiki/" id="id_help_link">Help</a></li>
                        <li><a href="http://blog.pythonanywhere.com/" id="id_blog_link">Blog</a></li>
                        
                        
                            <li><a href="/user/vargoose84/" id="id_dashboard_link">Dashboard</a></li>
                            <li><a href="/user/vargoose84/account/" id="id_account_link">Account</a></li>
                            <li><a href="/logout" id="id_logout_link">Log out</a></li>
                        
                    </ul>
                </div>
            </div>
        </div>
    </div>

    



        
    
        <div class="container" id="id_task_helper">
            <div class="alert alert-success fade in">
                <a id="id_task_helper_close" class="close" data-dismiss="alert" href="#">&times;</a>
                <div id="id_task_helper_text">Loading...</div>
                <span id="id_task_helper_buttons">
                    <button id="id_task_helper_back"><i class="icon-arrow-left"></i></button>
                    <button id="id_task_helper_next"><i class="icon-arrow-right"></i></button>
                </span>
                <div style="clear: both"></div>
            </div>
        </div>
    


        

<div>

    <div id="id_editor_toolbar">

      <span id="id_breadcrumbs_div">
            
                <a class="breadcrumbs_link" href="/user/vargoose84/files/">/</a> &gt;
            
                <a class="breadcrumbs_link" href="/user/vargoose84/files/home">home</a> &gt;
            
                <a class="breadcrumbs_link" href="/user/vargoose84/files/home/vargoose84">vargoose84</a> &gt;
            
                <a class="breadcrumbs_link" href="/user/vargoose84/files/home/vargoose84/mystatic">mystatic</a> &gt;
            
                <a class="breadcrumbs_link" href="/user/vargoose84/files/home/vargoose84/mystatic/js">js</a> &gt;
            
        <span id="id_file_name">bootstrap.js</span>
        <span id="id_unsaved_changes_spacer">
          <span id="id_unsaved_changes" class="pa_hidden">*</span>
        </span>
      </span>
      <img src="/static/anywhere/images/spinner-small.gif" class="pa_hidden" id="id_save_spinner" />
      <div id="id_editor_buttons_right" class="form-inline">

          <span id="id_keyboard_shortcuts"><a href="#">Keyboard shortcuts</a></span>
          <select id="id_keybinding_mode_select" class="input-small">
              <option value="normal">Normal</option>
              <option value="vim">Vim</option>
          </select>
          <button class="btn" id="id_save">Save</button>
          <span id="id_save_error" class="error_message pa_hidden">There was an error saving</span>
          

          
          
          

        </div>
        <div class="clear"></div>
    </div>

    <div id="id_editor">/* ===================================================
 * bootstrap-transition.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#transitions
 * ===================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


  /* CSS TRANSITION SUPPORT (http://www.modernizr.com/)
   * ======================================================= */

  $(function () {

    $.support.transition = (function () {

      var transitionEnd = (function () {

        var el = document.createElement(&#39;bootstrap&#39;)
          , transEndEventNames = {
               &#39;WebkitTransition&#39; : &#39;webkitTransitionEnd&#39;
            ,  &#39;MozTransition&#39;    : &#39;transitionend&#39;
            ,  &#39;OTransition&#39;      : &#39;oTransitionEnd otransitionend&#39;
            ,  &#39;transition&#39;       : &#39;transitionend&#39;
            }
          , name

        for (name in transEndEventNames){
          if (el.style[name] !== undefined) {
            return transEndEventNames[name]
          }
        }

      }())

      return transitionEnd &amp;&amp; {
        end: transitionEnd
      }

    })()

  })

}(window.jQuery);/* ==========================================================
 * bootstrap-alert.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#alerts
 * ==========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* ALERT CLASS DEFINITION
  * ====================== */

  var dismiss = &#39;[data-dismiss=&quot;alert&quot;]&#39;
    , Alert = function (el) {
        $(el).on(&#39;click&#39;, dismiss, this.close)
      }

  Alert.prototype.close = function (e) {
    var $this = $(this)
      , selector = $this.attr(&#39;data-target&#39;)
      , $parent

    if (!selector) {
      selector = $this.attr(&#39;href&#39;)
      selector = selector &amp;&amp; selector.replace(/.*(?=#[^\s]*$)/, &#39;&#39;) //strip for ie7
    }

    $parent = $(selector)

    e &amp;&amp; e.preventDefault()

    $parent.length || ($parent = $this.hasClass(&#39;alert&#39;) ? $this : $this.parent())

    $parent.trigger(e = $.Event(&#39;close&#39;))

    if (e.isDefaultPrevented()) return

    $parent.removeClass(&#39;in&#39;)

    function removeElement() {
      $parent
        .trigger(&#39;closed&#39;)
        .remove()
    }

    $.support.transition &amp;&amp; $parent.hasClass(&#39;fade&#39;) ?
      $parent.on($.support.transition.end, removeElement) :
      removeElement()
  }


 /* ALERT PLUGIN DEFINITION
  * ======================= */

  var old = $.fn.alert

  $.fn.alert = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;alert&#39;)
      if (!data) $this.data(&#39;alert&#39;, (data = new Alert(this)))
      if (typeof option == &#39;string&#39;) data[option].call($this)
    })
  }

  $.fn.alert.Constructor = Alert


 /* ALERT NO CONFLICT
  * ================= */

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


 /* ALERT DATA-API
  * ============== */

  $(document).on(&#39;click.alert.data-api&#39;, dismiss, Alert.prototype.close)

}(window.jQuery);/* ============================================================
 * bootstrap-button.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#buttons
 * ============================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* BUTTON PUBLIC CLASS DEFINITION
  * ============================== */

  var Button = function (element, options) {
    this.$element = $(element)
    this.options = $.extend({}, $.fn.button.defaults, options)
  }

  Button.prototype.setState = function (state) {
    var d = &#39;disabled&#39;
      , $el = this.$element
      , data = $el.data()
      , val = $el.is(&#39;input&#39;) ? &#39;val&#39; : &#39;html&#39;

    state = state + &#39;Text&#39;
    data.resetText || $el.data(&#39;resetText&#39;, $el[val]())

    $el[val](data[state] || this.options[state])

    // push to event loop to allow forms to submit
    setTimeout(function () {
      state == &#39;loadingText&#39; ?
        $el.addClass(d).attr(d, d) :
        $el.removeClass(d).removeAttr(d)
    }, 0)
  }

  Button.prototype.toggle = function () {
    var $parent = this.$element.closest(&#39;[data-toggle=&quot;buttons-radio&quot;]&#39;)

    $parent &amp;&amp; $parent
      .find(&#39;.active&#39;)
      .removeClass(&#39;active&#39;)

    this.$element.toggleClass(&#39;active&#39;)
  }


 /* BUTTON PLUGIN DEFINITION
  * ======================== */

  var old = $.fn.button

  $.fn.button = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;button&#39;)
        , options = typeof option == &#39;object&#39; &amp;&amp; option
      if (!data) $this.data(&#39;button&#39;, (data = new Button(this, options)))
      if (option == &#39;toggle&#39;) data.toggle()
      else if (option) data.setState(option)
    })
  }

  $.fn.button.defaults = {
    loadingText: &#39;loading...&#39;
  }

  $.fn.button.Constructor = Button


 /* BUTTON NO CONFLICT
  * ================== */

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


 /* BUTTON DATA-API
  * =============== */

  $(document).on(&#39;click.button.data-api&#39;, &#39;[data-toggle^=button]&#39;, function (e) {
    var $btn = $(e.target)
    if (!$btn.hasClass(&#39;btn&#39;)) $btn = $btn.closest(&#39;.btn&#39;)
    $btn.button(&#39;toggle&#39;)
  })

}(window.jQuery);/* ==========================================================
 * bootstrap-carousel.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#carousel
 * ==========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* CAROUSEL CLASS DEFINITION
  * ========================= */

  var Carousel = function (element, options) {
    this.$element = $(element)
    this.$indicators = this.$element.find(&#39;.carousel-indicators&#39;)
    this.options = options
    this.options.pause == &#39;hover&#39; &amp;&amp; this.$element
      .on(&#39;mouseenter&#39;, $.proxy(this.pause, this))
      .on(&#39;mouseleave&#39;, $.proxy(this.cycle, this))
  }

  Carousel.prototype = {

    cycle: function (e) {
      if (!e) this.paused = false
      if (this.interval) clearInterval(this.interval);
      this.options.interval
        &amp;&amp; !this.paused
        &amp;&amp; (this.interval = setInterval($.proxy(this.next, this), this.options.interval))
      return this
    }

  , getActiveIndex: function () {
      this.$active = this.$element.find(&#39;.item.active&#39;)
      this.$items = this.$active.parent().children()
      return this.$items.index(this.$active)
    }

  , to: function (pos) {
      var activeIndex = this.getActiveIndex()
        , that = this

      if (pos &gt; (this.$items.length - 1) || pos &lt; 0) return

      if (this.sliding) {
        return this.$element.one(&#39;slid&#39;, function () {
          that.to(pos)
        })
      }

      if (activeIndex == pos) {
        return this.pause().cycle()
      }

      return this.slide(pos &gt; activeIndex ? &#39;next&#39; : &#39;prev&#39;, $(this.$items[pos]))
    }

  , pause: function (e) {
      if (!e) this.paused = true
      if (this.$element.find(&#39;.next, .prev&#39;).length &amp;&amp; $.support.transition.end) {
        this.$element.trigger($.support.transition.end)
        this.cycle(true)
      }
      clearInterval(this.interval)
      this.interval = null
      return this
    }

  , next: function () {
      if (this.sliding) return
      return this.slide(&#39;next&#39;)
    }

  , prev: function () {
      if (this.sliding) return
      return this.slide(&#39;prev&#39;)
    }

  , slide: function (type, next) {
      var $active = this.$element.find(&#39;.item.active&#39;)
        , $next = next || $active[type]()
        , isCycling = this.interval
        , direction = type == &#39;next&#39; ? &#39;left&#39; : &#39;right&#39;
        , fallback  = type == &#39;next&#39; ? &#39;first&#39; : &#39;last&#39;
        , that = this
        , e

      this.sliding = true

      isCycling &amp;&amp; this.pause()

      $next = $next.length ? $next : this.$element.find(&#39;.item&#39;)[fallback]()

      e = $.Event(&#39;slide&#39;, {
        relatedTarget: $next[0]
      , direction: direction
      })

      if ($next.hasClass(&#39;active&#39;)) return

      if (this.$indicators.length) {
        this.$indicators.find(&#39;.active&#39;).removeClass(&#39;active&#39;)
        this.$element.one(&#39;slid&#39;, function () {
          var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()])
          $nextIndicator &amp;&amp; $nextIndicator.addClass(&#39;active&#39;)
        })
      }

      if ($.support.transition &amp;&amp; this.$element.hasClass(&#39;slide&#39;)) {
        this.$element.trigger(e)
        if (e.isDefaultPrevented()) return
        $next.addClass(type)
        $next[0].offsetWidth // force reflow
        $active.addClass(direction)
        $next.addClass(direction)
        this.$element.one($.support.transition.end, function () {
          $next.removeClass([type, direction].join(&#39; &#39;)).addClass(&#39;active&#39;)
          $active.removeClass([&#39;active&#39;, direction].join(&#39; &#39;))
          that.sliding = false
          setTimeout(function () { that.$element.trigger(&#39;slid&#39;) }, 0)
        })
      } else {
        this.$element.trigger(e)
        if (e.isDefaultPrevented()) return
        $active.removeClass(&#39;active&#39;)
        $next.addClass(&#39;active&#39;)
        this.sliding = false
        this.$element.trigger(&#39;slid&#39;)
      }

      isCycling &amp;&amp; this.cycle()

      return this
    }

  }


 /* CAROUSEL PLUGIN DEFINITION
  * ========================== */

  var old = $.fn.carousel

  $.fn.carousel = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;carousel&#39;)
        , options = $.extend({}, $.fn.carousel.defaults, typeof option == &#39;object&#39; &amp;&amp; option)
        , action = typeof option == &#39;string&#39; ? option : options.slide
      if (!data) $this.data(&#39;carousel&#39;, (data = new Carousel(this, options)))
      if (typeof option == &#39;number&#39;) data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  $.fn.carousel.defaults = {
    interval: 5000
  , pause: &#39;hover&#39;
  }

  $.fn.carousel.Constructor = Carousel


 /* CAROUSEL NO CONFLICT
  * ==================== */

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }

 /* CAROUSEL DATA-API
  * ================= */

  $(document).on(&#39;click.carousel.data-api&#39;, &#39;[data-slide], [data-slide-to]&#39;, function (e) {
    var $this = $(this), href
      , $target = $($this.attr(&#39;data-target&#39;) || (href = $this.attr(&#39;href&#39;)) &amp;&amp; href.replace(/.*(?=#[^\s]+$)/, &#39;&#39;)) //strip for ie7
      , options = $.extend({}, $target.data(), $this.data())
      , slideIndex

    $target.carousel(options)

    if (slideIndex = $this.attr(&#39;data-slide-to&#39;)) {
      $target.data(&#39;carousel&#39;).pause().to(slideIndex).cycle()
    }

    e.preventDefault()
  })

}(window.jQuery);/* =============================================================
 * bootstrap-collapse.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#collapse
 * =============================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* COLLAPSE PUBLIC CLASS DEFINITION
  * ================================ */

  var Collapse = function (element, options) {
    this.$element = $(element)
    this.options = $.extend({}, $.fn.collapse.defaults, options)

    if (this.options.parent) {
      this.$parent = $(this.options.parent)
    }

    this.options.toggle &amp;&amp; this.toggle()
  }

  Collapse.prototype = {

    constructor: Collapse

  , dimension: function () {
      var hasWidth = this.$element.hasClass(&#39;width&#39;)
      return hasWidth ? &#39;width&#39; : &#39;height&#39;
    }

  , show: function () {
      var dimension
        , scroll
        , actives
        , hasData

      if (this.transitioning || this.$element.hasClass(&#39;in&#39;)) return

      dimension = this.dimension()
      scroll = $.camelCase([&#39;scroll&#39;, dimension].join(&#39;-&#39;))
      actives = this.$parent &amp;&amp; this.$parent.find(&#39;&gt; .accordion-group &gt; .in&#39;)

      if (actives &amp;&amp; actives.length) {
        hasData = actives.data(&#39;collapse&#39;)
        if (hasData &amp;&amp; hasData.transitioning) return
        actives.collapse(&#39;hide&#39;)
        hasData || actives.data(&#39;collapse&#39;, null)
      }

      this.$element[dimension](0)
      this.transition(&#39;addClass&#39;, $.Event(&#39;show&#39;), &#39;shown&#39;)
      $.support.transition &amp;&amp; this.$element[dimension](this.$element[0][scroll])
    }

  , hide: function () {
      var dimension
      if (this.transitioning || !this.$element.hasClass(&#39;in&#39;)) return
      dimension = this.dimension()
      this.reset(this.$element[dimension]())
      this.transition(&#39;removeClass&#39;, $.Event(&#39;hide&#39;), &#39;hidden&#39;)
      this.$element[dimension](0)
    }

  , reset: function (size) {
      var dimension = this.dimension()

      this.$element
        .removeClass(&#39;collapse&#39;)
        [dimension](size || &#39;auto&#39;)
        [0].offsetWidth

      this.$element[size !== null ? &#39;addClass&#39; : &#39;removeClass&#39;](&#39;collapse&#39;)

      return this
    }

  , transition: function (method, startEvent, completeEvent) {
      var that = this
        , complete = function () {
            if (startEvent.type == &#39;show&#39;) that.reset()
            that.transitioning = 0
            that.$element.trigger(completeEvent)
          }

      this.$element.trigger(startEvent)

      if (startEvent.isDefaultPrevented()) return

      this.transitioning = 1

      this.$element[method](&#39;in&#39;)

      $.support.transition &amp;&amp; this.$element.hasClass(&#39;collapse&#39;) ?
        this.$element.one($.support.transition.end, complete) :
        complete()
    }

  , toggle: function () {
      this[this.$element.hasClass(&#39;in&#39;) ? &#39;hide&#39; : &#39;show&#39;]()
    }

  }


 /* COLLAPSE PLUGIN DEFINITION
  * ========================== */

  var old = $.fn.collapse

  $.fn.collapse = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;collapse&#39;)
        , options = $.extend({}, $.fn.collapse.defaults, $this.data(), typeof option == &#39;object&#39; &amp;&amp; option)
      if (!data) $this.data(&#39;collapse&#39;, (data = new Collapse(this, options)))
      if (typeof option == &#39;string&#39;) data[option]()
    })
  }

  $.fn.collapse.defaults = {
    toggle: true
  }

  $.fn.collapse.Constructor = Collapse


 /* COLLAPSE NO CONFLICT
  * ==================== */

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


 /* COLLAPSE DATA-API
  * ================= */

  $(document).on(&#39;click.collapse.data-api&#39;, &#39;[data-toggle=collapse]&#39;, function (e) {
    var $this = $(this), href
      , target = $this.attr(&#39;data-target&#39;)
        || e.preventDefault()
        || (href = $this.attr(&#39;href&#39;)) &amp;&amp; href.replace(/.*(?=#[^\s]+$)/, &#39;&#39;) //strip for ie7
      , option = $(target).data(&#39;collapse&#39;) ? &#39;toggle&#39; : $this.data()
    $this[$(target).hasClass(&#39;in&#39;) ? &#39;addClass&#39; : &#39;removeClass&#39;](&#39;collapsed&#39;)
    $(target).collapse(option)
  })

}(window.jQuery);/* ============================================================
 * bootstrap-dropdown.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#dropdowns
 * ============================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* DROPDOWN CLASS DEFINITION
  * ========================= */

  var toggle = &#39;[data-toggle=dropdown]&#39;
    , Dropdown = function (element) {
        var $el = $(element).on(&#39;click.dropdown.data-api&#39;, this.toggle)
        $(&#39;html&#39;).on(&#39;click.dropdown.data-api&#39;, function () {
          $el.parent().removeClass(&#39;open&#39;)
        })
      }

  Dropdown.prototype = {

    constructor: Dropdown

  , toggle: function (e) {
      var $this = $(this)
        , $parent
        , isActive

      if ($this.is(&#39;.disabled, :disabled&#39;)) return

      $parent = getParent($this)

      isActive = $parent.hasClass(&#39;open&#39;)

      clearMenus()

      if (!isActive) {
        if (&#39;ontouchstart&#39; in document.documentElement) {
          // if mobile we we use a backdrop because click events don&#39;t delegate
          $(&#39;&lt;div class=&quot;dropdown-backdrop&quot;/&gt;&#39;).insertBefore($(this)).on(&#39;click&#39;, clearMenus)
        }
        $parent.toggleClass(&#39;open&#39;)
      }

      $this.focus()

      return false
    }

  , keydown: function (e) {
      var $this
        , $items
        , $active
        , $parent
        , isActive
        , index

      if (!/(38|40|27)/.test(e.keyCode)) return

      $this = $(this)

      e.preventDefault()
      e.stopPropagation()

      if ($this.is(&#39;.disabled, :disabled&#39;)) return

      $parent = getParent($this)

      isActive = $parent.hasClass(&#39;open&#39;)

      if (!isActive || (isActive &amp;&amp; e.keyCode == 27)) {
        if (e.which == 27) $parent.find(toggle).focus()
        return $this.click()
      }

      $items = $(&#39;[role=menu] li:not(.divider):visible a&#39;, $parent)

      if (!$items.length) return

      index = $items.index($items.filter(&#39;:focus&#39;))

      if (e.keyCode == 38 &amp;&amp; index &gt; 0) index--                                        // up
      if (e.keyCode == 40 &amp;&amp; index &lt; $items.length - 1) index++                        // down
      if (!~index) index = 0

      $items
        .eq(index)
        .focus()
    }

  }

  function clearMenus() {
    $(&#39;.dropdown-backdrop&#39;).remove()
    $(toggle).each(function () {
      getParent($(this)).removeClass(&#39;open&#39;)
    })
  }

  function getParent($this) {
    var selector = $this.attr(&#39;data-target&#39;)
      , $parent

    if (!selector) {
      selector = $this.attr(&#39;href&#39;)
      selector = selector &amp;&amp; /#/.test(selector) &amp;&amp; selector.replace(/.*(?=#[^\s]*$)/, &#39;&#39;) //strip for ie7
    }

    $parent = selector &amp;&amp; $(selector)

    if (!$parent || !$parent.length) $parent = $this.parent()

    return $parent
  }


  /* DROPDOWN PLUGIN DEFINITION
   * ========================== */

  var old = $.fn.dropdown

  $.fn.dropdown = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;dropdown&#39;)
      if (!data) $this.data(&#39;dropdown&#39;, (data = new Dropdown(this)))
      if (typeof option == &#39;string&#39;) data[option].call($this)
    })
  }

  $.fn.dropdown.Constructor = Dropdown


 /* DROPDOWN NO CONFLICT
  * ==================== */

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  /* APPLY TO STANDARD DROPDOWN ELEMENTS
   * =================================== */

  $(document)
    .on(&#39;click.dropdown.data-api&#39;, clearMenus)
    .on(&#39;click.dropdown.data-api&#39;, &#39;.dropdown form&#39;, function (e) { e.stopPropagation() })
    .on(&#39;click.dropdown.data-api&#39;  , toggle, Dropdown.prototype.toggle)
    .on(&#39;keydown.dropdown.data-api&#39;, toggle + &#39;, [role=menu]&#39; , Dropdown.prototype.keydown)

}(window.jQuery);
/* =========================================================
 * bootstrap-modal.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#modals
 * =========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* MODAL CLASS DEFINITION
  * ====================== */

  var Modal = function (element, options) {
    this.options = options
    this.$element = $(element)
      .delegate(&#39;[data-dismiss=&quot;modal&quot;]&#39;, &#39;click.dismiss.modal&#39;, $.proxy(this.hide, this))
    this.options.remote &amp;&amp; this.$element.find(&#39;.modal-body&#39;).load(this.options.remote)
  }

  Modal.prototype = {

      constructor: Modal

    , toggle: function () {
        return this[!this.isShown ? &#39;show&#39; : &#39;hide&#39;]()
      }

    , show: function () {
        var that = this
          , e = $.Event(&#39;show&#39;)

        this.$element.trigger(e)

        if (this.isShown || e.isDefaultPrevented()) return

        this.isShown = true

        this.escape()

        this.backdrop(function () {
          var transition = $.support.transition &amp;&amp; that.$element.hasClass(&#39;fade&#39;)

          if (!that.$element.parent().length) {
            that.$element.appendTo(document.body) //don&#39;t move modals dom position
          }

          that.$element.show()

          if (transition) {
            that.$element[0].offsetWidth // force reflow
          }

          that.$element
            .addClass(&#39;in&#39;)
            .attr(&#39;aria-hidden&#39;, false)

          that.enforceFocus()

          transition ?
            that.$element.one($.support.transition.end, function () { that.$element.focus().trigger(&#39;shown&#39;) }) :
            that.$element.focus().trigger(&#39;shown&#39;)

        })
      }

    , hide: function (e) {
        e &amp;&amp; e.preventDefault()

        var that = this

        e = $.Event(&#39;hide&#39;)

        this.$element.trigger(e)

        if (!this.isShown || e.isDefaultPrevented()) return

        this.isShown = false

        this.escape()

        $(document).off(&#39;focusin.modal&#39;)

        this.$element
          .removeClass(&#39;in&#39;)
          .attr(&#39;aria-hidden&#39;, true)

        $.support.transition &amp;&amp; this.$element.hasClass(&#39;fade&#39;) ?
          this.hideWithTransition() :
          this.hideModal()
      }

    , enforceFocus: function () {
        var that = this
        $(document).on(&#39;focusin.modal&#39;, function (e) {
          if (that.$element[0] !== e.target &amp;&amp; !that.$element.has(e.target).length) {
            that.$element.focus()
          }
        })
      }

    , escape: function () {
        var that = this
        if (this.isShown &amp;&amp; this.options.keyboard) {
          this.$element.on(&#39;keyup.dismiss.modal&#39;, function ( e ) {
            e.which == 27 &amp;&amp; that.hide()
          })
        } else if (!this.isShown) {
          this.$element.off(&#39;keyup.dismiss.modal&#39;)
        }
      }

    , hideWithTransition: function () {
        var that = this
          , timeout = setTimeout(function () {
              that.$element.off($.support.transition.end)
              that.hideModal()
            }, 500)

        this.$element.one($.support.transition.end, function () {
          clearTimeout(timeout)
          that.hideModal()
        })
      }

    , hideModal: function () {
        var that = this
        this.$element.hide()
        this.backdrop(function () {
          that.removeBackdrop()
          that.$element.trigger(&#39;hidden&#39;)
        })
      }

    , removeBackdrop: function () {
        this.$backdrop &amp;&amp; this.$backdrop.remove()
        this.$backdrop = null
      }

    , backdrop: function (callback) {
        var that = this
          , animate = this.$element.hasClass(&#39;fade&#39;) ? &#39;fade&#39; : &#39;&#39;

        if (this.isShown &amp;&amp; this.options.backdrop) {
          var doAnimate = $.support.transition &amp;&amp; animate

          this.$backdrop = $(&#39;&lt;div class=&quot;modal-backdrop &#39; + animate + &#39;&quot; /&gt;&#39;)
            .appendTo(document.body)

          this.$backdrop.click(
            this.options.backdrop == &#39;static&#39; ?
              $.proxy(this.$element[0].focus, this.$element[0])
            : $.proxy(this.hide, this)
          )

          if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

          this.$backdrop.addClass(&#39;in&#39;)

          if (!callback) return

          doAnimate ?
            this.$backdrop.one($.support.transition.end, callback) :
            callback()

        } else if (!this.isShown &amp;&amp; this.$backdrop) {
          this.$backdrop.removeClass(&#39;in&#39;)

          $.support.transition &amp;&amp; this.$element.hasClass(&#39;fade&#39;)?
            this.$backdrop.one($.support.transition.end, callback) :
            callback()

        } else if (callback) {
          callback()
        }
      }
  }


 /* MODAL PLUGIN DEFINITION
  * ======================= */

  var old = $.fn.modal

  $.fn.modal = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;modal&#39;)
        , options = $.extend({}, $.fn.modal.defaults, $this.data(), typeof option == &#39;object&#39; &amp;&amp; option)
      if (!data) $this.data(&#39;modal&#39;, (data = new Modal(this, options)))
      if (typeof option == &#39;string&#39;) data[option]()
      else if (options.show) data.show()
    })
  }

  $.fn.modal.defaults = {
      backdrop: true
    , keyboard: true
    , show: true
  }

  $.fn.modal.Constructor = Modal


 /* MODAL NO CONFLICT
  * ================= */

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


 /* MODAL DATA-API
  * ============== */

  $(document).on(&#39;click.modal.data-api&#39;, &#39;[data-toggle=&quot;modal&quot;]&#39;, function (e) {
    var $this = $(this)
      , href = $this.attr(&#39;href&#39;)
      , $target = $($this.attr(&#39;data-target&#39;) || (href &amp;&amp; href.replace(/.*(?=#[^\s]+$)/, &#39;&#39;))) //strip for ie7
      , option = $target.data(&#39;modal&#39;) ? &#39;toggle&#39; : $.extend({ remote:!/#/.test(href) &amp;&amp; href }, $target.data(), $this.data())

    e.preventDefault()

    $target
      .modal(option)
      .one(&#39;hide&#39;, function () {
        $this.focus()
      })
  })

}(window.jQuery);
/* ===========================================================
 * bootstrap-tooltip.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#tooltips
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ===========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* TOOLTIP PUBLIC CLASS DEFINITION
  * =============================== */

  var Tooltip = function (element, options) {
    this.init(&#39;tooltip&#39;, element, options)
  }

  Tooltip.prototype = {

    constructor: Tooltip

  , init: function (type, element, options) {
      var eventIn
        , eventOut
        , triggers
        , trigger
        , i

      this.type = type
      this.$element = $(element)
      this.options = this.getOptions(options)
      this.enabled = true

      triggers = this.options.trigger.split(&#39; &#39;)

      for (i = triggers.length; i--;) {
        trigger = triggers[i]
        if (trigger == &#39;click&#39;) {
          this.$element.on(&#39;click.&#39; + this.type, this.options.selector, $.proxy(this.toggle, this))
        } else if (trigger != &#39;manual&#39;) {
          eventIn = trigger == &#39;hover&#39; ? &#39;mouseenter&#39; : &#39;focus&#39;
          eventOut = trigger == &#39;hover&#39; ? &#39;mouseleave&#39; : &#39;blur&#39;
          this.$element.on(eventIn + &#39;.&#39; + this.type, this.options.selector, $.proxy(this.enter, this))
          this.$element.on(eventOut + &#39;.&#39; + this.type, this.options.selector, $.proxy(this.leave, this))
        }
      }

      this.options.selector ?
        (this._options = $.extend({}, this.options, { trigger: &#39;manual&#39;, selector: &#39;&#39; })) :
        this.fixTitle()
    }

  , getOptions: function (options) {
      options = $.extend({}, $.fn[this.type].defaults, this.$element.data(), options)

      if (options.delay &amp;&amp; typeof options.delay == &#39;number&#39;) {
        options.delay = {
          show: options.delay
        , hide: options.delay
        }
      }

      return options
    }

  , enter: function (e) {
      var defaults = $.fn[this.type].defaults
        , options = {}
        , self

      this._options &amp;&amp; $.each(this._options, function (key, value) {
        if (defaults[key] != value) options[key] = value
      }, this)

      self = $(e.currentTarget)[this.type](options).data(this.type)

      if (!self.options.delay || !self.options.delay.show) return self.show()

      clearTimeout(this.timeout)
      self.hoverState = &#39;in&#39;
      this.timeout = setTimeout(function() {
        if (self.hoverState == &#39;in&#39;) self.show()
      }, self.options.delay.show)
    }

  , leave: function (e) {
      var self = $(e.currentTarget)[this.type](this._options).data(this.type)

      if (this.timeout) clearTimeout(this.timeout)
      if (!self.options.delay || !self.options.delay.hide) return self.hide()

      self.hoverState = &#39;out&#39;
      this.timeout = setTimeout(function() {
        if (self.hoverState == &#39;out&#39;) self.hide()
      }, self.options.delay.hide)
    }

  , show: function () {
      var $tip
        , pos
        , actualWidth
        , actualHeight
        , placement
        , tp
        , e = $.Event(&#39;show&#39;)

      if (this.hasContent() &amp;&amp; this.enabled) {
        this.$element.trigger(e)
        if (e.isDefaultPrevented()) return
        $tip = this.tip()
        this.setContent()

        if (this.options.animation) {
          $tip.addClass(&#39;fade&#39;)
        }

        placement = typeof this.options.placement == &#39;function&#39; ?
          this.options.placement.call(this, $tip[0], this.$element[0]) :
          this.options.placement

        $tip
          .detach()
          .css({ top: 0, left: 0, display: &#39;block&#39; })

        this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

        pos = this.getPosition()

        actualWidth = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight

        switch (placement) {
          case &#39;bottom&#39;:
            tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2}
            break
          case &#39;top&#39;:
            tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2}
            break
          case &#39;left&#39;:
            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth}
            break
          case &#39;right&#39;:
            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width}
            break
        }

        this.applyPlacement(tp, placement)
        this.$element.trigger(&#39;shown&#39;)
      }
    }

  , applyPlacement: function(offset, placement){
      var $tip = this.tip()
        , width = $tip[0].offsetWidth
        , height = $tip[0].offsetHeight
        , actualWidth
        , actualHeight
        , delta
        , replace

      $tip
        .offset(offset)
        .addClass(placement)
        .addClass(&#39;in&#39;)

      actualWidth = $tip[0].offsetWidth
      actualHeight = $tip[0].offsetHeight

      if (placement == &#39;top&#39; &amp;&amp; actualHeight != height) {
        offset.top = offset.top + height - actualHeight
        replace = true
      }

      if (placement == &#39;bottom&#39; || placement == &#39;top&#39;) {
        delta = 0

        if (offset.left &lt; 0){
          delta = offset.left * -2
          offset.left = 0
          $tip.offset(offset)
          actualWidth = $tip[0].offsetWidth
          actualHeight = $tip[0].offsetHeight
        }

        this.replaceArrow(delta - width + actualWidth, actualWidth, &#39;left&#39;)
      } else {
        this.replaceArrow(actualHeight - height, actualHeight, &#39;top&#39;)
      }

      if (replace) $tip.offset(offset)
    }

  , replaceArrow: function(delta, dimension, position){
      this
        .arrow()
        .css(position, delta ? (50 * (1 - delta / dimension) + &quot;%&quot;) : &#39;&#39;)
    }

  , setContent: function () {
      var $tip = this.tip()
        , title = this.getTitle()

      $tip.find(&#39;.tooltip-inner&#39;)[this.options.html ? &#39;html&#39; : &#39;text&#39;](title)
      $tip.removeClass(&#39;fade in top bottom left right&#39;)
    }

  , hide: function () {
      var that = this
        , $tip = this.tip()
        , e = $.Event(&#39;hide&#39;)

      this.$element.trigger(e)
      if (e.isDefaultPrevented()) return

      $tip.removeClass(&#39;in&#39;)

      function removeWithAnimation() {
        var timeout = setTimeout(function () {
          $tip.off($.support.transition.end).detach()
        }, 500)

        $tip.one($.support.transition.end, function () {
          clearTimeout(timeout)
          $tip.detach()
        })
      }

      $.support.transition &amp;&amp; this.$tip.hasClass(&#39;fade&#39;) ?
        removeWithAnimation() :
        $tip.detach()

      this.$element.trigger(&#39;hidden&#39;)

      return this
    }

  , fixTitle: function () {
      var $e = this.$element
      if ($e.attr(&#39;title&#39;) || typeof($e.attr(&#39;data-original-title&#39;)) != &#39;string&#39;) {
        $e.attr(&#39;data-original-title&#39;, $e.attr(&#39;title&#39;) || &#39;&#39;).attr(&#39;title&#39;, &#39;&#39;)
      }
    }

  , hasContent: function () {
      return this.getTitle()
    }

  , getPosition: function () {
      var el = this.$element[0]
      return $.extend({}, (typeof el.getBoundingClientRect == &#39;function&#39;) ? el.getBoundingClientRect() : {
        width: el.offsetWidth
      , height: el.offsetHeight
      }, this.$element.offset())
    }

  , getTitle: function () {
      var title
        , $e = this.$element
        , o = this.options

      title = $e.attr(&#39;data-original-title&#39;)
        || (typeof o.title == &#39;function&#39; ? o.title.call($e[0]) :  o.title)

      return title
    }

  , tip: function () {
      return this.$tip = this.$tip || $(this.options.template)
    }

  , arrow: function(){
      return this.$arrow = this.$arrow || this.tip().find(&quot;.tooltip-arrow&quot;)
    }

  , validate: function () {
      if (!this.$element[0].parentNode) {
        this.hide()
        this.$element = null
        this.options = null
      }
    }

  , enable: function () {
      this.enabled = true
    }

  , disable: function () {
      this.enabled = false
    }

  , toggleEnabled: function () {
      this.enabled = !this.enabled
    }

  , toggle: function (e) {
      var self = e ? $(e.currentTarget)[this.type](this._options).data(this.type) : this
      self.tip().hasClass(&#39;in&#39;) ? self.hide() : self.show()
    }

  , destroy: function () {
      this.hide().$element.off(&#39;.&#39; + this.type).removeData(this.type)
    }

  }


 /* TOOLTIP PLUGIN DEFINITION
  * ========================= */

  var old = $.fn.tooltip

  $.fn.tooltip = function ( option ) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;tooltip&#39;)
        , options = typeof option == &#39;object&#39; &amp;&amp; option
      if (!data) $this.data(&#39;tooltip&#39;, (data = new Tooltip(this, options)))
      if (typeof option == &#39;string&#39;) data[option]()
    })
  }

  $.fn.tooltip.Constructor = Tooltip

  $.fn.tooltip.defaults = {
    animation: true
  , placement: &#39;top&#39;
  , selector: false
  , template: &#39;&lt;div class=&quot;tooltip&quot;&gt;&lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;&lt;div class=&quot;tooltip-inner&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#39;
  , trigger: &#39;hover focus&#39;
  , title: &#39;&#39;
  , delay: 0
  , html: false
  , container: false
  }


 /* TOOLTIP NO CONFLICT
  * =================== */

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(window.jQuery);
/* ===========================================================
 * bootstrap-popover.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#popovers
 * ===========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================================================== */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* POPOVER PUBLIC CLASS DEFINITION
  * =============================== */

  var Popover = function (element, options) {
    this.init(&#39;popover&#39;, element, options)
  }


  /* NOTE: POPOVER EXTENDS BOOTSTRAP-TOOLTIP.js
     ========================================== */

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype, {

    constructor: Popover

  , setContent: function () {
      var $tip = this.tip()
        , title = this.getTitle()
        , content = this.getContent()

      $tip.find(&#39;.popover-title&#39;)[this.options.html ? &#39;html&#39; : &#39;text&#39;](title)
      $tip.find(&#39;.popover-content&#39;)[this.options.html ? &#39;html&#39; : &#39;text&#39;](content)

      $tip.removeClass(&#39;fade top bottom left right in&#39;)
    }

  , hasContent: function () {
      return this.getTitle() || this.getContent()
    }

  , getContent: function () {
      var content
        , $e = this.$element
        , o = this.options

      content = (typeof o.content == &#39;function&#39; ? o.content.call($e[0]) :  o.content)
        || $e.attr(&#39;data-content&#39;)

      return content
    }

  , tip: function () {
      if (!this.$tip) {
        this.$tip = $(this.options.template)
      }
      return this.$tip
    }

  , destroy: function () {
      this.hide().$element.off(&#39;.&#39; + this.type).removeData(this.type)
    }

  })


 /* POPOVER PLUGIN DEFINITION
  * ======================= */

  var old = $.fn.popover

  $.fn.popover = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;popover&#39;)
        , options = typeof option == &#39;object&#39; &amp;&amp; option
      if (!data) $this.data(&#39;popover&#39;, (data = new Popover(this, options)))
      if (typeof option == &#39;string&#39;) data[option]()
    })
  }

  $.fn.popover.Constructor = Popover

  $.fn.popover.defaults = $.extend({} , $.fn.tooltip.defaults, {
    placement: &#39;right&#39;
  , trigger: &#39;click&#39;
  , content: &#39;&#39;
  , template: &#39;&lt;div class=&quot;popover&quot;&gt;&lt;div class=&quot;arrow&quot;&gt;&lt;/div&gt;&lt;h3 class=&quot;popover-title&quot;&gt;&lt;/h3&gt;&lt;div class=&quot;popover-content&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#39;
  })


 /* POPOVER NO CONFLICT
  * =================== */

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(window.jQuery);
/* =============================================================
 * bootstrap-scrollspy.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#scrollspy
 * =============================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================== */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* SCROLLSPY CLASS DEFINITION
  * ========================== */

  function ScrollSpy(element, options) {
    var process = $.proxy(this.process, this)
      , $element = $(element).is(&#39;body&#39;) ? $(window) : $(element)
      , href
    this.options = $.extend({}, $.fn.scrollspy.defaults, options)
    this.$scrollElement = $element.on(&#39;scroll.scroll-spy.data-api&#39;, process)
    this.selector = (this.options.target
      || ((href = $(element).attr(&#39;href&#39;)) &amp;&amp; href.replace(/.*(?=#[^\s]+$)/, &#39;&#39;)) //strip for ie7
      || &#39;&#39;) + &#39; .nav li &gt; a&#39;
    this.$body = $(&#39;body&#39;)
    this.refresh()
    this.process()
  }

  ScrollSpy.prototype = {

      constructor: ScrollSpy

    , refresh: function () {
        var self = this
          , $targets

        this.offsets = $([])
        this.targets = $([])

        $targets = this.$body
          .find(this.selector)
          .map(function () {
            var $el = $(this)
              , href = $el.data(&#39;target&#39;) || $el.attr(&#39;href&#39;)
              , $href = /^#\w/.test(href) &amp;&amp; $(href)
            return ( $href
              &amp;&amp; $href.length
              &amp;&amp; [[ $href.position().top + (!$.isWindow(self.$scrollElement.get(0)) &amp;&amp; self.$scrollElement.scrollTop()), href ]] ) || null
          })
          .sort(function (a, b) { return a[0] - b[0] })
          .each(function () {
            self.offsets.push(this[0])
            self.targets.push(this[1])
          })
      }

    , process: function () {
        var scrollTop = this.$scrollElement.scrollTop() + this.options.offset
          , scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight
          , maxScroll = scrollHeight - this.$scrollElement.height()
          , offsets = this.offsets
          , targets = this.targets
          , activeTarget = this.activeTarget
          , i

        if (scrollTop &gt;= maxScroll) {
          return activeTarget != (i = targets.last()[0])
            &amp;&amp; this.activate ( i )
        }

        for (i = offsets.length; i--;) {
          activeTarget != targets[i]
            &amp;&amp; scrollTop &gt;= offsets[i]
            &amp;&amp; (!offsets[i + 1] || scrollTop &lt;= offsets[i + 1])
            &amp;&amp; this.activate( targets[i] )
        }
      }

    , activate: function (target) {
        var active
          , selector

        this.activeTarget = target

        $(this.selector)
          .parent(&#39;.active&#39;)
          .removeClass(&#39;active&#39;)

        selector = this.selector
          + &#39;[data-target=&quot;&#39; + target + &#39;&quot;],&#39;
          + this.selector + &#39;[href=&quot;&#39; + target + &#39;&quot;]&#39;

        active = $(selector)
          .parent(&#39;li&#39;)
          .addClass(&#39;active&#39;)

        if (active.parent(&#39;.dropdown-menu&#39;).length)  {
          active = active.closest(&#39;li.dropdown&#39;).addClass(&#39;active&#39;)
        }

        active.trigger(&#39;activate&#39;)
      }

  }


 /* SCROLLSPY PLUGIN DEFINITION
  * =========================== */

  var old = $.fn.scrollspy

  $.fn.scrollspy = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;scrollspy&#39;)
        , options = typeof option == &#39;object&#39; &amp;&amp; option
      if (!data) $this.data(&#39;scrollspy&#39;, (data = new ScrollSpy(this, options)))
      if (typeof option == &#39;string&#39;) data[option]()
    })
  }

  $.fn.scrollspy.Constructor = ScrollSpy

  $.fn.scrollspy.defaults = {
    offset: 10
  }


 /* SCROLLSPY NO CONFLICT
  * ===================== */

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old
    return this
  }


 /* SCROLLSPY DATA-API
  * ================== */

  $(window).on(&#39;load&#39;, function () {
    $(&#39;[data-spy=&quot;scroll&quot;]&#39;).each(function () {
      var $spy = $(this)
      $spy.scrollspy($spy.data())
    })
  })

}(window.jQuery);/* ========================================================
 * bootstrap-tab.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#tabs
 * ========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================== */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* TAB CLASS DEFINITION
  * ==================== */

  var Tab = function (element) {
    this.element = $(element)
  }

  Tab.prototype = {

    constructor: Tab

  , show: function () {
      var $this = this.element
        , $ul = $this.closest(&#39;ul:not(.dropdown-menu)&#39;)
        , selector = $this.attr(&#39;data-target&#39;)
        , previous
        , $target
        , e

      if (!selector) {
        selector = $this.attr(&#39;href&#39;)
        selector = selector &amp;&amp; selector.replace(/.*(?=#[^\s]*$)/, &#39;&#39;) //strip for ie7
      }

      if ( $this.parent(&#39;li&#39;).hasClass(&#39;active&#39;) ) return

      previous = $ul.find(&#39;.active:last a&#39;)[0]

      e = $.Event(&#39;show&#39;, {
        relatedTarget: previous
      })

      $this.trigger(e)

      if (e.isDefaultPrevented()) return

      $target = $(selector)

      this.activate($this.parent(&#39;li&#39;), $ul)
      this.activate($target, $target.parent(), function () {
        $this.trigger({
          type: &#39;shown&#39;
        , relatedTarget: previous
        })
      })
    }

  , activate: function ( element, container, callback) {
      var $active = container.find(&#39;&gt; .active&#39;)
        , transition = callback
            &amp;&amp; $.support.transition
            &amp;&amp; $active.hasClass(&#39;fade&#39;)

      function next() {
        $active
          .removeClass(&#39;active&#39;)
          .find(&#39;&gt; .dropdown-menu &gt; .active&#39;)
          .removeClass(&#39;active&#39;)

        element.addClass(&#39;active&#39;)

        if (transition) {
          element[0].offsetWidth // reflow for transition
          element.addClass(&#39;in&#39;)
        } else {
          element.removeClass(&#39;fade&#39;)
        }

        if ( element.parent(&#39;.dropdown-menu&#39;) ) {
          element.closest(&#39;li.dropdown&#39;).addClass(&#39;active&#39;)
        }

        callback &amp;&amp; callback()
      }

      transition ?
        $active.one($.support.transition.end, next) :
        next()

      $active.removeClass(&#39;in&#39;)
    }
  }


 /* TAB PLUGIN DEFINITION
  * ===================== */

  var old = $.fn.tab

  $.fn.tab = function ( option ) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;tab&#39;)
      if (!data) $this.data(&#39;tab&#39;, (data = new Tab(this)))
      if (typeof option == &#39;string&#39;) data[option]()
    })
  }

  $.fn.tab.Constructor = Tab


 /* TAB NO CONFLICT
  * =============== */

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


 /* TAB DATA-API
  * ============ */

  $(document).on(&#39;click.tab.data-api&#39;, &#39;[data-toggle=&quot;tab&quot;], [data-toggle=&quot;pill&quot;]&#39;, function (e) {
    e.preventDefault()
    $(this).tab(&#39;show&#39;)
  })

}(window.jQuery);/* =============================================================
 * bootstrap-typeahead.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#typeahead
 * =============================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


!function($){

  &quot;use strict&quot;; // jshint ;_;


 /* TYPEAHEAD PUBLIC CLASS DEFINITION
  * ================================= */

  var Typeahead = function (element, options) {
    this.$element = $(element)
    this.options = $.extend({}, $.fn.typeahead.defaults, options)
    this.matcher = this.options.matcher || this.matcher
    this.sorter = this.options.sorter || this.sorter
    this.highlighter = this.options.highlighter || this.highlighter
    this.updater = this.options.updater || this.updater
    this.source = this.options.source
    this.$menu = $(this.options.menu)
    this.shown = false
    this.listen()
  }

  Typeahead.prototype = {

    constructor: Typeahead

  , select: function () {
      var val = this.$menu.find(&#39;.active&#39;).attr(&#39;data-value&#39;)
      this.$element
        .val(this.updater(val))
        .change()
      return this.hide()
    }

  , updater: function (item) {
      return item
    }

  , show: function () {
      var pos = $.extend({}, this.$element.position(), {
        height: this.$element[0].offsetHeight
      })

      this.$menu
        .insertAfter(this.$element)
        .css({
          top: pos.top + pos.height
        , left: pos.left
        })
        .show()

      this.shown = true
      return this
    }

  , hide: function () {
      this.$menu.hide()
      this.shown = false
      return this
    }

  , lookup: function (event) {
      var items

      this.query = this.$element.val()

      if (!this.query || this.query.length &lt; this.options.minLength) {
        return this.shown ? this.hide() : this
      }

      items = $.isFunction(this.source) ? this.source(this.query, $.proxy(this.process, this)) : this.source

      return items ? this.process(items) : this
    }

  , process: function (items) {
      var that = this

      items = $.grep(items, function (item) {
        return that.matcher(item)
      })

      items = this.sorter(items)

      if (!items.length) {
        return this.shown ? this.hide() : this
      }

      return this.render(items.slice(0, this.options.items)).show()
    }

  , matcher: function (item) {
      return ~item.toLowerCase().indexOf(this.query.toLowerCase())
    }

  , sorter: function (items) {
      var beginswith = []
        , caseSensitive = []
        , caseInsensitive = []
        , item

      while (item = items.shift()) {
        if (!item.toLowerCase().indexOf(this.query.toLowerCase())) beginswith.push(item)
        else if (~item.indexOf(this.query)) caseSensitive.push(item)
        else caseInsensitive.push(item)
      }

      return beginswith.concat(caseSensitive, caseInsensitive)
    }

  , highlighter: function (item) {
      var query = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, &#39;\\$&amp;&#39;)
      return item.replace(new RegExp(&#39;(&#39; + query + &#39;)&#39;, &#39;ig&#39;), function ($1, match) {
        return &#39;&lt;strong&gt;&#39; + match + &#39;&lt;/strong&gt;&#39;
      })
    }

  , render: function (items) {
      var that = this

      items = $(items).map(function (i, item) {
        i = $(that.options.item).attr(&#39;data-value&#39;, item)
        i.find(&#39;a&#39;).html(that.highlighter(item))
        return i[0]
      })

      items.first().addClass(&#39;active&#39;)
      this.$menu.html(items)
      return this
    }

  , next: function (event) {
      var active = this.$menu.find(&#39;.active&#39;).removeClass(&#39;active&#39;)
        , next = active.next()

      if (!next.length) {
        next = $(this.$menu.find(&#39;li&#39;)[0])
      }

      next.addClass(&#39;active&#39;)
    }

  , prev: function (event) {
      var active = this.$menu.find(&#39;.active&#39;).removeClass(&#39;active&#39;)
        , prev = active.prev()

      if (!prev.length) {
        prev = this.$menu.find(&#39;li&#39;).last()
      }

      prev.addClass(&#39;active&#39;)
    }

  , listen: function () {
      this.$element
        .on(&#39;focus&#39;,    $.proxy(this.focus, this))
        .on(&#39;blur&#39;,     $.proxy(this.blur, this))
        .on(&#39;keypress&#39;, $.proxy(this.keypress, this))
        .on(&#39;keyup&#39;,    $.proxy(this.keyup, this))

      if (this.eventSupported(&#39;keydown&#39;)) {
        this.$element.on(&#39;keydown&#39;, $.proxy(this.keydown, this))
      }

      this.$menu
        .on(&#39;click&#39;, $.proxy(this.click, this))
        .on(&#39;mouseenter&#39;, &#39;li&#39;, $.proxy(this.mouseenter, this))
        .on(&#39;mouseleave&#39;, &#39;li&#39;, $.proxy(this.mouseleave, this))
    }

  , eventSupported: function(eventName) {
      var isSupported = eventName in this.$element
      if (!isSupported) {
        this.$element.setAttribute(eventName, &#39;return;&#39;)
        isSupported = typeof this.$element[eventName] === &#39;function&#39;
      }
      return isSupported
    }

  , move: function (e) {
      if (!this.shown) return

      switch(e.keyCode) {
        case 9: // tab
        case 13: // enter
        case 27: // escape
          e.preventDefault()
          break

        case 38: // up arrow
          e.preventDefault()
          this.prev()
          break

        case 40: // down arrow
          e.preventDefault()
          this.next()
          break
      }

      e.stopPropagation()
    }

  , keydown: function (e) {
      this.suppressKeyPressRepeat = ~$.inArray(e.keyCode, [40,38,9,13,27])
      this.move(e)
    }

  , keypress: function (e) {
      if (this.suppressKeyPressRepeat) return
      this.move(e)
    }

  , keyup: function (e) {
      switch(e.keyCode) {
        case 40: // down arrow
        case 38: // up arrow
        case 16: // shift
        case 17: // ctrl
        case 18: // alt
          break

        case 9: // tab
        case 13: // enter
          if (!this.shown) return
          this.select()
          break

        case 27: // escape
          if (!this.shown) return
          this.hide()
          break

        default:
          this.lookup()
      }

      e.stopPropagation()
      e.preventDefault()
  }

  , focus: function (e) {
      this.focused = true
    }

  , blur: function (e) {
      this.focused = false
      if (!this.mousedover &amp;&amp; this.shown) this.hide()
    }

  , click: function (e) {
      e.stopPropagation()
      e.preventDefault()
      this.select()
      this.$element.focus()
    }

  , mouseenter: function (e) {
      this.mousedover = true
      this.$menu.find(&#39;.active&#39;).removeClass(&#39;active&#39;)
      $(e.currentTarget).addClass(&#39;active&#39;)
    }

  , mouseleave: function (e) {
      this.mousedover = false
      if (!this.focused &amp;&amp; this.shown) this.hide()
    }

  }


  /* TYPEAHEAD PLUGIN DEFINITION
   * =========================== */

  var old = $.fn.typeahead

  $.fn.typeahead = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;typeahead&#39;)
        , options = typeof option == &#39;object&#39; &amp;&amp; option
      if (!data) $this.data(&#39;typeahead&#39;, (data = new Typeahead(this, options)))
      if (typeof option == &#39;string&#39;) data[option]()
    })
  }

  $.fn.typeahead.defaults = {
    source: []
  , items: 8
  , menu: &#39;&lt;ul class=&quot;typeahead dropdown-menu&quot;&gt;&lt;/ul&gt;&#39;
  , item: &#39;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;/a&gt;&lt;/li&gt;&#39;
  , minLength: 1
  }

  $.fn.typeahead.Constructor = Typeahead


 /* TYPEAHEAD NO CONFLICT
  * =================== */

  $.fn.typeahead.noConflict = function () {
    $.fn.typeahead = old
    return this
  }


 /* TYPEAHEAD DATA-API
  * ================== */

  $(document).on(&#39;focus.typeahead.data-api&#39;, &#39;[data-provide=&quot;typeahead&quot;]&#39;, function (e) {
    var $this = $(this)
    if ($this.data(&#39;typeahead&#39;)) return
    $this.typeahead($this.data())
  })

}(window.jQuery);
/* ==========================================================
 * bootstrap-affix.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#affix
 * ==========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function ($) {

  &quot;use strict&quot;; // jshint ;_;


 /* AFFIX CLASS DEFINITION
  * ====================== */

  var Affix = function (element, options) {
    this.options = $.extend({}, $.fn.affix.defaults, options)
    this.$window = $(window)
      .on(&#39;scroll.affix.data-api&#39;, $.proxy(this.checkPosition, this))
      .on(&#39;click.affix.data-api&#39;,  $.proxy(function () { setTimeout($.proxy(this.checkPosition, this), 1) }, this))
    this.$element = $(element)
    this.checkPosition()
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(&#39;:visible&#39;)) return

    var scrollHeight = $(document).height()
      , scrollTop = this.$window.scrollTop()
      , position = this.$element.offset()
      , offset = this.options.offset
      , offsetBottom = offset.bottom
      , offsetTop = offset.top
      , reset = &#39;affix affix-top affix-bottom&#39;
      , affix

    if (typeof offset != &#39;object&#39;) offsetBottom = offsetTop = offset
    if (typeof offsetTop == &#39;function&#39;) offsetTop = offset.top()
    if (typeof offsetBottom == &#39;function&#39;) offsetBottom = offset.bottom()

    affix = this.unpin != null &amp;&amp; (scrollTop + this.unpin &lt;= position.top) ?
      false    : offsetBottom != null &amp;&amp; (position.top + this.$element.height() &gt;= scrollHeight - offsetBottom) ?
      &#39;bottom&#39; : offsetTop != null &amp;&amp; scrollTop &lt;= offsetTop ?
      &#39;top&#39;    : false

    if (this.affixed === affix) return

    this.affixed = affix
    this.unpin = affix == &#39;bottom&#39; ? position.top - scrollTop : null

    this.$element.removeClass(reset).addClass(&#39;affix&#39; + (affix ? &#39;-&#39; + affix : &#39;&#39;))
  }


 /* AFFIX PLUGIN DEFINITION
  * ======================= */

  var old = $.fn.affix

  $.fn.affix = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data(&#39;affix&#39;)
        , options = typeof option == &#39;object&#39; &amp;&amp; option
      if (!data) $this.data(&#39;affix&#39;, (data = new Affix(this, options)))
      if (typeof option == &#39;string&#39;) data[option]()
    })
  }

  $.fn.affix.Constructor = Affix

  $.fn.affix.defaults = {
    offset: 0
  }


 /* AFFIX NO CONFLICT
  * ================= */

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


 /* AFFIX DATA-API
  * ============== */

  $(window).on(&#39;load&#39;, function () {
    $(&#39;[data-spy=&quot;affix&quot;]&#39;).each(function () {
      var $spy = $(this)
        , data = $spy.data()

      data.offset = data.offset || {}

      data.offsetBottom &amp;&amp; (data.offset.bottom = data.offsetBottom)
      data.offsetTop &amp;&amp; (data.offset.top = data.offsetTop)

      $spy.affix(data)
    })
  })


}(window.jQuery);</div>

    <div id="id_go_to_line_dialog" class="pa_hidden">
        <p class="form-inline">Line number: <input id="id_go_to_line_dialog_input" /></p>
        <div class="dialog_buttons">
            <button class="btn" id="id_go_to_line_dialog_ok_button">Go</button>
            <button class="btn" id="id_go_to_line_dialog_close_button">Close</button>
        </div>
    </div>

    <div id="id_file_changed_on_disk" class="pa_hidden">
        <p>Are you sure you want to save it?  Alternatively, you could re-open it in a new tab to check differences</p>
        <div class="dialog_buttons">
            <button id="id_cancel_save" class="btn">Cancel</button>
            <button id="id_force_save" class="btn btn-danger">Force Save</button>
        </div>
    </div>



        
    <div id="id_footer" class="container">

        <footer id="id_copyright_div">
            <p>
                Copyright &copy; 2014 <a href="/about/company_details/">PythonAnywhere LLP</a>
                &mdash;
                <a href="/terms/">Terms</a>
                &mdash;
                <a href="/privacy/">Privacy</a><br/>
                "Python" is a registered trademark of the Python Software Foundation.
            </p>
        </footer>

    </div>


        


        <div id="id_feedback_dialog" title="Help us improve" style="display:none">
    <div id="id_feedback_dialog_blurb_big" class="dialog_blurb_big">
        It's always a pleasure to hear from you!
    </div>
    <div id="id_feedback_dialog_blurb_small">
        Ask us a question, or tell us what you love or hate about PythonAnywhere.<br/>
        We'll get back to you over email ASAP.
    </div>
    <textarea id="id_feedback_dialog_text" rows="6"></textarea>
    <input id="id_feedback_dialog_email_address" type="text" placeholder="Email address (optional - only necessary if you would like us to contact you)"/>
    
    <div id="id_feedback_dialog_error" class="pa_hidden">
        Sorry, there was an error connecting to the server. <br/>Please try again in a few moments...
    </div>
    <div class="dialog_buttons">
        <img id="id_feedback_dialog_spinner" src="/static/anywhere/images/spinner-small.gif" />
        <button class="btn btn-primary" id="id_feedback_dialog_ok_button">OK</button>
        <button class="btn" id="id_feedback_dialog_cancel_button">Cancel</button>
    </div>
</div>


        <script type="text/javascript">
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-18014859-6']);
            _gaq.push(['_trackPageview']);

            (function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
            })();

        </script>

        


    </body>
</html>
